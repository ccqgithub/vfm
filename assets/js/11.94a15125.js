(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{422:function(e,t,a){"use strict";a.r(t);var o=a(56),r=Object(o.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Mobx driven form management and validation tool.")]),e._v(" "),a("h2",{attrs:{id:"why"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why"}},[e._v("#")]),e._v(" Why?")]),e._v(" "),a("p",[e._v("There is a quite excellent form management and validation tools like "),a("a",{attrs:{href:"https://github.com/react-hook-form/react-hook-form",target:"_blank",rel:"noopener noreferrer"}},[e._v("react-hooks-form"),a("OutboundLink")],1),e._v(" or "),a("a",{attrs:{href:"https://github.com/jaredpalmer/formik",target:"_blank",rel:"noopener noreferrer"}},[e._v("formik"),a("OutboundLink")],1),e._v(", why should I create a new project?")]),e._v(" "),a("ul",[a("li",[e._v("Can't use form validations outside of "),a("code",[e._v("hooks")]),e._v(" and "),a("code",[e._v("components")]),e._v(". For examples, I wan't to make form validations in a "),a("code",[e._v("service")]),e._v(", witch be used by many components.")]),e._v(" "),a("li",[e._v("They all use "),a("code",[e._v("context level")]),e._v(" updates, can not make "),a("code",[e._v("field level")]),e._v(" or "),a("code",[e._v("component level")]),e._v(" updates.")])]),e._v(" "),a("p",[e._v("For these reasons, this tool used "),a("a",{attrs:{href:"https://github.com/mobxjs/mobx",target:"_blank",rel:"noopener noreferrer"}},[e._v("mobx"),a("OutboundLink")],1),e._v("'s reactivity capability to create form, so we can create and pass form outside of "),a("code",[e._v("hooks")]),e._v(" and "),a("code",[e._v("components")]),e._v(", and keep the reactivity of form states.")]),e._v(" "),a("h2",{attrs:{id:"packages"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#packages"}},[e._v("#")]),e._v(" Packages")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("vfm")]),e._v(": The form management core, use with "),a("a",{attrs:{href:"https://github.com/mobxjs/mobx",target:"_blank",rel:"noopener noreferrer"}},[e._v("mobx"),a("OutboundLink")],1),e._v(" stand-alone.")]),e._v(" "),a("li",[a("code",[e._v("vfm-react")]),e._v(": Use "),a("code",[e._v("vfm")]),e._v(" with react.")])]),e._v(" "),a("h2",{attrs:{id:"features"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#features"}},[e._v("#")]),e._v(" Features")]),e._v(" "),a("ul",[a("li",[a("strong",[e._v("üç¶ Easy To Use")]),e._v(": Simple way to create forms and use validations, few APIs and less configurations.")]),e._v(" "),a("li",[a("strong",[e._v("üç° Reactivity")]),e._v(": Driven by mobx, inherit the reactivity capability of it, field level update.")]),e._v(" "),a("li",[a("strong",[e._v("üç≤ Flexible")]),e._v(": Can use component or hooks with react by "),a("code",[e._v("vfm-react")]),e._v(", also can be used with mobx stand-alone.")]),e._v(" "),a("li",[a("strong",[e._v("üç∞ Virtual Fields")]),e._v(": Can register virtual validations with form states, not limited to the real fields that have value.")]),e._v(" "),a("li",[a("strong",[e._v("üçö Custom UI")]),e._v(": Not bound to any UI libraries, can use with any UI libraries.")]),e._v(" "),a("li",[a("strong",[e._v("üç≠ Fully Typed")]),e._v(": Flexible programmatic APIs with full TypeScript typing.")])])])}),[],!1,null,null,null);t.default=r.exports}}]);