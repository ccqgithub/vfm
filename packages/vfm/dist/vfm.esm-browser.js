import{reactive as t,readonly as s,watchEffect as i,ref as a,toRaw as e}from"vue";
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function h(t,s,i,a){return new(i||(i=Promise))((function(e,h){function l(t){try{r(a.next(t))}catch(s){h(s)}}function d(t){try{r(a.throw(t))}catch(s){h(s)}}function r(t){var s;t.done?e(t.value):(s=t.value,s instanceof i?s:new i((function(t){t(s)}))).then(l,d)}r((a=a.apply(t,s||[])).next())}))}class l{constructor(i,a){this.name="",this.data=null,this.validateFn=null,this.validateCount=0,this.stopValidateWatcher=null,this.stopDirtyWatcher=null,this.form=i,this.name=a.name,this._data=t({value:void 0===a.value?a.defaultValue:a.value,defaultValue:a.defaultValue,error:{message:""},isError:!1,isValidating:!1,isDirty:!1,isTouched:!1,isChanged:!1}),this.data=s(this._data),this.validateFn=a.validateFn||null,this.initWatcher()}get state(){return this.data||(this.data=s(this._data)),this.data}initWatcher(){this.stopValidateWatcher=i((()=>h(this,void 0,void 0,(function*(){this.validateCount++;const t=this.state.value,s=this.form.state,i=this.validateCount;this._data.isValidating=!0;const a=this.validateFn&&(yield this.validateFn(t,s))||{};if(i!==this.validateCount)return;this._data.isValidating=!1;const e=!!a.message;this._data.error.message=a.message||"",this._data.error.types=a.types,this._data.isError=e})))),this.stopDirtyWatcher=i((()=>{this._data.isDirty=this._data.value!==this._data.defaultValue}))}onUnregister(){var t,s;null===(t=this.stopValidateWatcher)||void 0===t||t.call(this),null===(s=this.stopDirtyWatcher)||void 0===s||s.call(this)}onChange(t){if(void 0===t)return;const s=this.state.value!==t;this._data.value=t,this._data.isChanged=this._data.isChanged||s}onTouched(){this._data.isTouched=!0}reset(t){var s,i;this.validateCount++,null===(s=this.stopValidateWatcher)||void 0===s||s.call(this),null===(i=this.stopDirtyWatcher)||void 0===i||i.call(this),void 0!==t&&(this._data.defaultValue=t),this._data.error={},this._data.isError=!1,this._data.isValidating=!1,this._data.isDirty=!1,this._data.isTouched=!1,this._data.isChanged=!1,this._data.value=this._data.defaultValue,this.initWatcher()}}const d=(t,s,i)=>{const a=s.split(".");let e=t;for(;a.length;){const t=a.shift();0===a.length?e[t]=i:"object"==typeof e[t]&&null!==e[t]||(e[t]=/^\d+$/.test(t)?[]:{}),e=e[t]}},r=(t,s)=>{const i=s.split(".");let a=t;for(;i.length&&a;){const t=i.shift();a="object"==typeof a&&null!==a?a[t]:void 0}return 0===i.length?a:void 0},n=(t,s)=>{const i=Object.keys(t),a=Object.keys(s);i.filter((t=>!a.includes(t))).forEach((s=>{delete t[s]})),a.forEach((i=>{t[i]=s[i]}))};class o{constructor(s){this.fieldsKeys=a([]),this.fields=new Map,this.data=null,this._fieldStates=t({}),this._fieldStatesReadonly=null,this.stopStateWatcher=null,this.stopStatusWatcher=null,this.stopValidatingWatcher=null,this.waiters=[],this.defaultValues={},this.defaultValues=s.defaultValues||{},this._data=t({values:e(this.defaultValues)||{},error:"",errors:{},isError:!1,isValidating:!1,isDirty:!1,isTouched:!1,isChanged:!1,isSubmitted:!1,isSubmitting:!1,submitCount:0})}get state(){return this.data||(this.data=s(this._data)),this.data}get fieldStates(){return this._fieldStatesReadonly||(this._fieldStatesReadonly=s(this._fieldStates)),this._fieldStatesReadonly}mount(){this.stopStateWatcher=i((()=>{let t=!1,s=!1,i=!1,a=!1,e=!1;const h={},l={};let r="";this.fieldsKeys.value.forEach((n=>{const o=this.fields.get(n);o&&(d(h,n,o.state),d(l,n,o.state.error),d(this._data.values,n,o.state.value),o.state.isError&&(t=!0),o.state.isValidating&&(s=!0),o.state.isDirty&&(i=!0),o.state.isTouched&&(a=!0),o.state.isChanged||(e=!0),o.state.error.message&&!r&&(r=o.state.error.message))})),n(this._fieldStates,h),n(this._data.errors,l),this._data.isError=t,this._data.error=r,this._data.isValidating=s,this._data.isDirty=i,this._data.isTouched=a,this._data.isChanged=e})),this.stopValidatingWatcher=i((()=>{this.state.isValidating||this.waiters.forEach((t=>{t()})),this.waiters=[]}))}unmount(){var t,s,i;null===(t=this.stopStateWatcher)||void 0===t||t.call(this),null===(s=this.stopStatusWatcher)||void 0===s||s.call(this),null===(i=this.stopValidatingWatcher)||void 0===i||i.call(this)}registerField(t,s={}){const{fieldsKeys:i,fields:a}=this;if(i.value.includes(t))throw"字段已存在";for(const l of i.value)if(l.includes(t)||t.includes(l))throw"一个字段内不能包含另一个字段";const e=r(this.state.values,t);let h=s.value;void 0===h&&(h=e),void 0===h&&(h=s.defaultValue);const d=void 0===e?s.defaultValue:e,n=new l(this,Object.assign(Object.assign({},s),{name:t,value:h,defaultValue:d}));a.set(t,n),this.fieldsKeys.value.push(t)}unregisterField(t){const{fields:s}=this,i=s.get(t);if(!i)throw"字段不存在";i.onUnregister();const a=this.fieldsKeys.value.indexOf(t);-1!==a&&this.fieldsKeys.value.splice(a,1),((t,s)=>{const i=s.split(".");let a=t;for(;i.length&&"object"==typeof a&&null!==a;){const t=i.shift();0===i.length?delete a[t]:a=a[t]}})(this._data.values,t),s.delete(t)}setValue(t,s){if(void 0===s)return;const i=this.fields.get(t);if(!i)throw"字段不存在";i.onChange(s)}submit(t,s){const i=()=>{this.state.isError?s(e(this.state.errors)):(this._data.isSubmitting=!1,this._data.isSubmitted=!0,t(e(this.state.values)))};this._data.submitCount++,this._data.isSubmitting=!0,this.state.isValidating?i():this.waiters.push((()=>{i()}))}reset(t){this.waiters=[],this._data.values=void 0===t?this.defaultValues:t,this._data.errors={},this._data.isError=!1,this._data.isValidating=!1,this._data.isDirty=!1,this._data.isTouched=!1,this._data.isChanged=!1,this._data.isSubmitted=!1,this._data.isSubmitting=!1,this._data.submitCount=0;for(const[s,i]of this.fields){const t=r(this.state.values,s);i.reset(t)}}}export{l as Field,o as Form};
